version: 2
jobs:
  build:
    working_directory: /go/src/github.com/Financial-Times/concept-rw-elasticsearch
    docker:
      - image: golang:1
        environment:
          ELASTICSEARCH_TEST_URL: http://localhost:9200
          CIRCLE_TEST_REPORT: /tmp/test-results
          CIRCLE_COVERAGE_REPORT: /tmp/coverage-results
      - image: elasticsearch:5.3
    steps:
      - checkout
      - run:
          name: External Dependencies
          command: |
            GO111MODULE=off go get github.com/mattn/goveralls
            GO111MODULE=off go get github.com/jstemmer/go-junit-report
            curl -sfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh| sh -s -- -b $(go env GOPATH)/bin v1.18.0
            wget https://raw.githubusercontent.com/Financial-Times/upp-coding-standard/v1.0.0/golangci-config/.golangci.yml
      - run:
          name: Make result folders
          command: |
            mkdir -p ${CIRCLE_TEST_REPORT}
            mkdir -p ${CIRCLE_COVERAGE_REPORT}
      - run:
          name: Go Build
          command: go build -mod=readonly -v
      - run:
          name: Run Linters
          command: golangci-lint run --config=.golangci.yml --new-from-rev=master
      - run:
          name: Run Tests
          command: |
            go test -tags=integration -mod=readonly -v -race -cover -coverprofile=${CIRCLE_COVERAGE_REPORT}/coverage.out ./... | go-junit-report > ${CIRCLE_TEST_REPORT}/junit.xml
      - run:
          name: Upload Coverage
          command: goveralls -coverprofile=$CIRCLE_COVERAGE_REPORT/coverage.out -service=circle-ci -repotoken=$COVERALLS_TOKEN
      - store_test_results:
          path: /tmp/test-results
  dockerfile:
    working_directory: /concept-rw-elasticsearch
    docker:
      - image: docker:18
    steps:
      - checkout
      - setup_docker_engine
      - run:
          name: Build Dockerfile
          command: docker build .
